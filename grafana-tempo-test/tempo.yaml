apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: simplest
spec:
  storage:
    secret:
      name: grafana-tempo-manual-azure-test
      type: azure
  storageSize: 1Gi
  resources:
    total:
      limits:
        memory: 2Gi
        cpu: '2'

  extraConfig:
    tempo:
      overrides:
        defaults:
          ingestion:
            max_traces_per_user: 100000
      server:
        grpc_server_max_recv_msg_size: 52430000 # 50 MiB
        grpc_server_max_send_msg_size: 52430000 # 50 MiB
      compactor:
        compaction:
          # -- Duration to keep blocks
          block_retention: 672h # 4 weeks
          # Duration to keep blocks that have been compacted elsewhere
          compacted_block_retention: 1h
          # -- Blocks in this time window will be compacted together
          compaction_window: 1h
          # -- Amount of data to buffer from input blocks
          v2_in_buffer_bytes: 5242880
          # -- Flush data to backend when buffer is this large
          v2_out_buffer_bytes: 20971520
          # -- Maximum number of traces in a compacted block. WARNING: Deprecated. Use max_block_bytes instead.
          max_compaction_objects: 6000000
          # -- Maximum size of a compacted block in bytes
          max_block_bytes: 107374182400
          # -- Number of tenants to process in parallel during retention
          retention_concurrency: 10
          # -- Number of traces to buffer in memory during compaction
          v2_prefetch_traces_count: 1000
          # -- The maximum amount of time to spend compacting a single tenant before moving to the next
          max_time_per_tenant: 5m
          # -- The time between compaction cycles
          compaction_cycle: 120s
      querier:
        frontend_worker:
          grpc_client_config:
            # Sets the maximum gRPC message size that the querier accepts.
            max_send_msg_size: 52430000 # 50 MiB
        trace_by_id:
          query_timeout: 10s




  template:

    queryFrontend:
      jaegerQuery:
        enabled: true
      component: 
        resources:
          limits:
            cpu: '1'
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 500Mi

    distributor:
      component:
        resources:
          limits:
            cpu: '1'
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 1Gi

    compactor:
      resources:
        limits:
          cpu: '3'
          memory: 4Gi
        requests:
          cpu: 100m
          memory: 2Gi

    ingester:
      replicas: 3
      resources:
        limits:
          cpu: '2'
          memory: 4Gi
        requests:
          cpu: 100m
          memory: 2Gi

    querier:
      resources:
        limits:
          cpu: '2'
          memory: 4Gi
        requests:
          cpu: 100m
          memory: 2Gi
